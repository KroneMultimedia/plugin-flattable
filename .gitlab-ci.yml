---
stages:
- tests
- release_publish
- github

Unit Test:
  dependencies: []
  image: gitlab.krone.at:5000/krn/backend:beta
  tags:
    - docker
  services:
    - mysql:latest
  stage: tests
  variables:
    # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
    MYSQL_ROOT_PASSWORD: somepw
  script:
    - composer update
    - echo "zend_extension=xdebug.so" > /usr/local/etc/php/conf.d/xdebug.ini
    - bin/install-wp-tests.sh wordpress_test root 'somepw' mysql latest
    - composer update
    - phpunit --colors=always --coverage-text=1.txt
    - grep "Lines:" 1.txt
  except:
      - /^v.*/ # do not unit test release tags
      - after_build
      - after_build_beta


tests:phpcs:
  image: gitlab.krone.at:5000/krn/docker_base:beta
  stage: tests
  script:
    # Check for var_dump/dump
    - export PATH=~/.composer/vendor/bin:$PATH
    - php-cs-fixer fix --verbose --dry-run --rules=@PSR2 || true
  tags:
    - docker
  except:
    - /^v([0-9]+).*/

tests:phpstan:
  image: gitlab.krone.at:5000/krn/docker_base:beta
  stage: tests
  script:
    # Check for var_dump/dump
    - export PATH=~/.composer/vendor/bin:$PATH
    - phpstan analyse src/ || true
  tags:
    - docker
  except:
    - /^v([0-9]+).*/

tests:phpcompatibility:
  image: gitlab.krone.at:5000/krn/docker_base:beta
  stage: tests
  script:
    # Check for var_dump/dump
    - export PATH=~/.composer/vendor/bin:$PATH
    - phpcs -p src --standard=PHPCompatibility --extensions=php
    - phpcs -p tests --standard=PHPCompatibility --extensions=php
  tags:
    - docker
  except:
    - /^v([0-9]+).*/



release:publish:
  image: gitlab.krone.at:5000/krn/fastlane_runner:latest
  dependencies: []
  stage: release_publish
  script:
  - fastlane publish_release
  tags:
  - docker
  only:
  - release
  - fastlane
  - beta
  - master

release:publish:wp:
  image: gitlab.krone.at:5000/krn/fastlane_runner:latest
  dependencies: []
  stage: github
  script:
  - fastlane wp_github
  tags:
  - docker
  only:
  - master

before_script:
- eval $(ssh-agent -s)
- ssh-add <(echo "$SSH_DEPLOY_KEY")



